EletroStore: Loja Virtual com Quarkus e React
Este √© um projeto de e-commerce completo, desenvolvido para demonstrar a integra√ß√£o de um backend robusto com um frontend moderno. A aplica√ß√£o simula as funcionalidades de uma loja virtual de eletr√¥nicos, implementando casos de uso como gerenciamento de produtos, carrinho de compras e autentica√ß√£o de usu√°rios.

A arquitetura segue os padr√µes de uma API REST desacoplada no backend e uma Single-Page Application (SPA) no frontend, utilizando DTOs para toda a comunica√ß√£o, garantindo seguran√ßa e estabilidade.

‚ö†Ô∏è Aviso Importante sobre o Ambiente
Este projeto foi especificamente configurado para garantir a compatibilidade com um ambiente de desenvolvimento mais antigo (macOS Sierra). Como resultado, as vers√µes das principais tecnologias foram cuidadosamente selecionadas e podem n√£o corresponder √†s vers√µes mais recentes.

‚ú® Funcionalidades Principais
Autentica√ß√£o Segura: Sistema de login com e-mail/senha e gera√ß√£o de tokens JWT.

Controle de Acesso: Perfis de usu√°rio USER e ADMIN com permiss√µes distintas.

Gerenciamento de Produtos: (Para Admins) Funcionalidades de criar, ler, atualizar e deletar produtos.

Cat√°logo de Produtos: Visualiza√ß√£o de produtos com busca e filtragem para todos os usu√°rios.

Carrinho de Compras: Adi√ß√£o e gerenciamento de itens no carrinho.

Gerenciamento de Pedidos: Acompanhamento de pedidos para usu√°rios e gerenciamento para administradores.

Design Responsivo: Interface adapt√°vel constru√≠da com Tailwind CSS.

üõ†Ô∏è Tecnologias Utilizadas
Esta √© a pilha de tecnologias espec√≠fica que est√° configurada e funcionando neste projeto:

Backend (Quarkus)
Java: 17

Quarkus: 2.16.12.Final

Maven: 3.6.3

Arquitetura: Model-Resource-Service (DAO, BO, DTO)

Frontend (React)
Node.js: 12.22.12

npm: 6.14.x

Vite: 2.6.14

React: 17.0.2

React Router: 5.3.0

Tailwind CSS: 2.2.19

TypeScript

‚öôÔ∏è Pr√©-requisitos
Antes de come√ßar, garanta que voc√™ tem as seguintes ferramentas instaladas nas vers√µes corretas. O uso de uma ferramenta como o SDKMAN! √© altamente recomendado.

Java 17

Maven 3.6.3

Node.js 12.22.12

üöÄ Configura√ß√£o e Instala√ß√£o
Clone o reposit√≥rio:

git clone [URL_DO_SEU_REPOSITORIO_AQUI]

Navegue at√© a pasta do projeto:

cd ecommerce-2

Instale as depend√™ncias do Frontend:

npm install

‚ñ∂Ô∏è Executando a Aplica√ß√£o
Para a aplica√ß√£o funcionar completamente, voc√™ precisar√° ter dois terminais abertos simultaneamente.

Terminal 1 - Executando o Backend (Quarkus)
Navegue at√© a pasta do projeto.

Execute o comando do Maven:

mvn clean quarkus:dev

O backend estar√° rodando em http://localhost:8080.

Terminal 2 - Executando o Frontend (Vite)
Abra um novo terminal e navegue at√© a mesma pasta do projeto.

Execute o comando do npm:

npm run dev

A interface do site estar√° acess√≠vel em http://localhost:3000.

üë§ Contas de Demonstra√ß√£o
O sistema √© iniciado com duas contas de teste para facilitar a avalia√ß√£o:

Administrador:

E-mail: admin@ecommerce.com

Senha: admin123

Usu√°rio Comum:

E-mail: user@ecommerce.com

Senha: user123